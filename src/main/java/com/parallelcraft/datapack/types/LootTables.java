package com.parallelcraft.datapack.types;

import com.parallelcraft.datapack.Main;
import com.parallelcraft.datapack.reflection.ReflectionHelper;
import java.io.InputStream;
import org.json.JSONObject;
import org.json.JSONTokener;

/**
 * @author extremeCrazyCoder
 */
public class LootTables {
    /*
     * net/minecraft/data/loot/EntityLoot -> monster drops
     * net/minecraft/data/loot/ChestLoot -> loot of chests
     * net/minecraft/data/loot/BlockLoot -> loot for destroying blocks
     * net/minecraft/data/loot/GiftLoot -> loot given by various entities as gift
     * net/minecraft/data/loot/FishingLoot -> ...
     * net/minecraft/data/loot/PiglinBarterLoot -> ??? piglin trading
     * 
     * 
     * net/minecraft/world/level/storage/loot/LootTables.java -> loading of external loot tables?? wtf external = internal
     * Access via BuiltInLootTables.***
     * Expected class: net/minecraft/world/level/storage/loot/LootTable.java
     * 
     * Use .json files -> they seem to be generated by above classes
     */
    
    private static final String OUTPUT_PATH = "loot_tables/";
    private static final String INPUT_PATH = "data/minecraft/loot_tables/";

    public static void generateDatapackPart() throws Exception {
        System.out.println("Generating LOOT_TABLES part");
        
        Class ref = ReflectionHelper.getRegistryClass().inst();
        for(String fName : Main.getResourceListing(ref, INPUT_PATH, true)) {
            if(!fName.endsWith(".json")) {
                System.out.println("Ignoring: /" + INPUT_PATH + fName);
                continue;
            }
            InputStream contentStream = ref.getResourceAsStream("/" + INPUT_PATH + fName);
            JSONTokener contentTokener = new JSONTokener(contentStream);
            JSONObject contents = new JSONObject(contentTokener);
            
            Main.writePart(OUTPUT_PATH + fName, contents);
        }
        
    }
}
